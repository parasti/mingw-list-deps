#!/bin/bash

[ $# -eq 0 ] && {
    echo "Usage: $0 file.exe|file.dll ..." >&2
    exit 1
}

while [ $# -gt 0 ]; do
    case "$1" in
        -h|--help)
            echo "Usage: $0 file.exe|file.dll ..."
            exit
            ;;
        --copy)
            COPY=1
            ;;
        --)
            shift
            break
            ;;
        *)
            break
            ;;
    esac

    shift
done

# Find an objdump binary.
OBJDUMP=${OBJDUMP:-objdump}

# Find harder.
$OBJDUMP --version &> /dev/null || OBJDUMP=mingw-objdump
$OBJDUMP --version &> /dev/null || {
    echo "No objdump binary found." >&2
    exit 1
}

# List of wildcards of all installed DLLs.
DLL_GLOBS="/usr/i686-w64-mingw32/sys-root/mingw/bin/*.dll /mingw64/bin/*.dll"

# All installed DLLs as a newline-separated list.
ALL_DLLS="$(for dll in $DLL_GLOBS; do [ -f "$dll" ] && echo $dll; done)"

# Dump the linked DLLs.
dump_dlls() {
    $OBJDUMP -p -- "$1" | grep 'DLL Name: ' | cut -d: -f2
}

LISTED_DLLS=""

# Recursively dump the linked DLLs.
list_deps() {
    for dll in $(dump_dlls "$1"); do
        installed="$(echo "$ALL_DLLS" | grep "$dll" | head -n1)"

        if [ "$installed" ]; then
            if [ ! "$(echo "$LISTED_DLLS" | grep "$installed")" ]; then
                echo "$installed"
                LISTED_DLLS="$(echo "$LISTED_DLLS" && echo "$installed")"
                list_deps "$installed"
            else
                echo "$(basename "$installed") is already listed, skipping" >&2
            fi
        elif [ "$VERBOSE" = 1 ]; then
            echo "$dll required by $(basename "$1"), but not found" >&2
        fi
    done
}

for obj in "$@"; do
    DEPS="$(list_deps "$obj")"

    if [ "$DEPS" ]; then
        echo "$DEPS"

        [ "$COPY" = 1 ] && cp $DEPS "$(dirname "$obj")"
    fi
done